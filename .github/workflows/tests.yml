name: Tests

on:
  push:
    branches:
      - 'feature/*'
      - 'hotfix/*'

jobs:
  tests:
    name: unit_test
    if: contains(github.event.head_commit.message, '[skip ci]') == false
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install and configure Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.1.10
          virtualenvs-create: true
          virtualenvs-in-project: false
          installer-parallel: true
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies
        run: poetry install
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      - name: Test
        run: python3 manage.py test
#  lint-and-test:
#    name: Linters
#
#    if: contains(github.event.head_commit.message, '[skip ci]') == false
#
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v3
#      - name: Set up Python
#        uses: actions/setup-python@v4
#        with:
#          python-version: '3.10'
#          architecture: 'x64'
#
#      - name: flake8
#        uses: liskin/gh-problem-matcher-wrap@v1
#        with:
#          linters: flake8
#          run: flake8 api config manage.py
#
#      - name: isort
#        uses: liskin/gh-problem-matcher-wrap@v1
#        with:
#          linters: isort
#          run: isort --check api config manage.py
